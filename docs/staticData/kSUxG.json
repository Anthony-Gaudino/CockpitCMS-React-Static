{"title":"Docs","published":true,"menu":["main"],"components":[{"component":"PageBannerMedia","settings":{"id":"","class":"","style":"","title":"Docs","summary":null,"image":{"path":"/2018/10/19/5bca3a91a378dsmallbanner-1440x400.jpeg","title":"smallbanner-1440x400.jpeg","mime":"image/jpeg","description":"","tags":[],"size":18772,"image":true,"video":false,"audio":false,"archive":false,"document":false,"code":false,"created":1539979921,"modified":1539979921,"_by":"5bc9193c303535004c0002f5","width":1440,"height":220,"colors":["#0f324d","#b6becb","#5f6978","#7c8494","#747c8c"],"folder":"","_id":"5bca3a91646430004a00033b","cimgt":1540853537,"styles":[{"style":"PageBannerMedia","path":"//styles/page/5bcc5247613366007a000373/d4fec06b52b1d108065d7227ffa2cc31_1440x440_90_1540228046_thumbnail_adb115059e28d960fa8badfac5516667.jpeg?cimgt=1540853537"},{"style":"PageBanner","path":"//styles/page/5bcc5247613366007a000373/f3d8b03c10a12b7b180f3196acfc8c41_1440x220_90_1540228046_thumbnail_adb115059e28d960fa8badfac5516667.jpeg?cimgt=1540853537"}]},"height":"small"}},{"component":"SubPages","settings":{"id":"","class":"","style":"","title":null}}],"slug":"docs","description":"","title_slug":"docs","_mby":"5bc9193c303535004c0002f5","_by":"5bc9193c303535004c0002f5","_modified":1541022490,"_created":1540117063,"_id":"5bcc5247613366007a000373","_pid":null,"_o":2,"subpages":[{"title":"Requirements","components":[{"component":"heading","settings":{"id":"","class":"","style":"","text":"Requirements","tag":"h1"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>For running this example website you'll need:</p>\n<ul>\n<li>Docker (Tested on MacOs)</li>\n<li>node.js</li>\n<li>The code from&nbsp;<a href=\"https://github.com/pauloamgomes/CockpitCMS-React-Static\" target=\"_blank\" rel=\"noopener\">https://github.com/pauloamgomes/CockpitCMS-React-Static</a></li>\n</ul>\n<p>If you met above requirements proceed with the installation instructions.</p>"}}],"slug":"requirements","title_slug":"requirements","_mby":"5bc9193c303535004c0002f5","_by":"5bc9193c303535004c0002f5","_modified":1540853608,"_created":1540156061,"_id":"5bccea9d61336600920003cf","_link":"subpage"},{"title":"Installation","components":[{"component":"heading","settings":{"id":"","class":"","style":"","text":"Installation","tag":"h1"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>The installation of Cockpit React Static example website only requires a few steps:</p>"}},{"component":"CodeBlock","settings":{"id":"","class":"","style":"","code":"# Clone repository\ngit clone git@github.com:pauloamgomes/CockpitCMS-React-Static.git\ncd cockpitcms-react-static\n\n# start Cockpit\ncd cockpit\n./install.sh\n\n# start react app\ncd ../react-app\nyarn install\nyarn start\n","language":"bash"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>After the execution of above steps you are ready to access Cockpit on <strong>http://localhost:8088</strong> (user: <strong>admin</strong> pass: <strong>admin</strong>) and the website on <strong>http://localhost:3000</strong></p>"}},{"component":"Video","settings":{"id":"","class":"","style":"","url":"https://youtu.be/9s1HJMHe4zg","autoplay":null}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p><br />The project can be also deployed to a local docker instance, just run:</p>"}},{"component":"CodeBlock","settings":{"id":"","class":"","style":"","code":"cd react-app\nyarn deploy.dev\n\ncd ../public\n./start.sh","language":"bash"}}],"slug":"installation","title_slug":"installation","_mby":"5bc9193c303535004c0002f5","_by":"5bc9193c303535004c0002f5","_modified":1541019744,"_created":1540155904,"_id":"5bccea0061336600920003bd","_link":"subpage"},{"title":"Configuration","components":[{"component":"heading","settings":{"id":"","class":"","style":"","text":"Configuration","tag":"h1"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>Depending on your needs you can configure both the Cockpit CMS and React App, the main configuration options are defined below.</p>"}},{"component":"heading","settings":{"id":"","class":"","style":"","text":"Cockpit","tag":"h3"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>Cockpit has one single configuration file using the yaml format, it resides in config/config.yaml</p>"}},{"component":"CodeBlock","settings":{"id":"","class":"","style":"","code":"debug: true\n# Cockpit settings\napp.name: Cockpit Example\n# cockpit session name\nsession.name: cockpit_local\n# base url\nbase_url: http://localhost:8088\nsite_url: http://localhost:8088\nbase_route: /\n\n# define globally site language, otherwise will get from the user\ni18n: en\n\n# define the languages you want to manage\nlanguages:\n    en: English\n\n# unique slugs Addon\nunique.slugs:\n    slug.name: slug\n    collections:\n        page: title\n        post: title\n        subpage: title\n\n# disabled layout components\ncomponents.disabled:\n  image: true\n  section: true\n  html: true\n  button: true\n  gallery: true\n\n# define additional groups\ngroups:\n    # admin:\n    #   $admin: true\n    api:\n        $admin: false\n        cockpit:\n            backend: false\n            finder: false\n        BackupAndRestore:\n            manage.create: true\n    author:\n        $admin: false\n        $vars:\n            finder.path: /upload\n            finder.allowed_uploads: pdf, png, jpg\n            assets.allowed_uploads: png, jpg\n        BackupAndRestore:\n            manage.view: true\n            manage.download: true\n        cockpit:\n            backend: true\n            finder: true\n        imagestyles:\n            manage.view: true\n            manage.admin: false\n            rebuild: true\n\n# use mongodb as main data storage\n#database:\n#    server: mongodb://localhost:27017\n#    options:\n#        db: cockpitdb\n\n# use smtp to send emails\n#mailer:\n#    from      : user@gmail.com\n#    transport : smtp\n#    host      : cockpit-react-mailhog\n#    user      : username\n#    password  : xxpasswordxx,\n#    port      : 1025,\n#    auth      : true,\n#    encryption: '' # '', 'ssl' or 'tls'\n\n# Set cors settings\ncors:\n  # Specify allowed headers, e.g. 'x-allowed-header'.\n  allowedHeaders: 'X-Requested-With, Content-Type, Origin, Cache-Control, Pragma, Authorization, Accept, Accept-Encoding'\n  # Specify allowed request methods, use ['*'] to allow all.\n  allowedMethods: 'PUT, POST, GET, OPTIONS, DELETE'\n  # Configure requests allowed from specific origins, use ['*'] to allow all.\n  allowedOrigins: '*'\n  # Sets the Access-Control-Max-Age header.\n  maxAge: 500\n  # Sets the Access-Control-Allow-Credentials header.\n  allowCredentials: true\n  # Sets the Access-Control-Expose-Headers header.\n  exposedHeaders: true\n","language":"yaml"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>The access tokens shall be the same configured in Cockpit API page:</p>"}},{"component":"CustomImage","settings":{"id":"","class":"","style":"Image","title":"Cockpit API Settings pages","asset":{"path":"/2018/10/21/5bccfc7887536Cockpit-API-Settings.jpg","title":"Cockpit-API-Settings.jpg","mime":"image/jpeg","description":"","tags":[],"size":73670,"image":true,"video":false,"audio":false,"archive":false,"document":false,"code":false,"created":1540160632,"modified":1540160632,"_by":"5bc9193c303535004c0002f5","width":1280,"height":621,"colors":["#fbfbfb","#3a8986","#d4354f","#a0bbc5","#7c7c7c"],"folder":"5bcce0f16133660092000133","_id":"5bccfc786133660096000075","cimgt":1540853589,"styles":[{"style":"Image","path":"//styles/subpage/5bccfc8e613366009e0002ec/dc665de83042a7f30a6a50f684c37fbe_1110x539_90_1540228046_fitToWidth_adb115059e28d960fa8badfac5516667.jpg?cimgt=1540853589"},{"style":"Square","path":"//styles/subpage/5bccfc8e613366009e0002ec/94299f8ad3ae6305f0bd4ab91a2d5b10_550x550_90_1540228046_thumbnail_adb115059e28d960fa8badfac5516667.jpg?cimgt=1540853589"}]}}},{"component":"heading","settings":{"id":"","class":"","style":"","text":"React Static","tag":"h3"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>The React Static configurations are related with the Cockpit API endpoints, access tokens and paths. There are 3 environment variables (local, development, production) that are loaded according to the corresponding yarn command. When running '<strong>yarn start</strong>' the configurations are loaded from the '<strong>.env.local</strong>' file:</p>"}},{"component":"CodeBlock","settings":{"id":"","class":"","style":"","code":"COCKPIT_HOST=http://localhost:8088\nCOCKPIT_STORAGE_DIR=storage\nCOCKPIT_UPLOADS_DIR=storage/uploads\nCOCKPIT_API_TOKEN=74371aad38cc6a00cdba9a1f7792c9\nCOCKPIT_FORMS_API_TOKEN=44112136dc6dd498a1ac39c097d8dc\nWEBSITE_BASE_PATH=\nWEBSITE_SITE_ROOT=http://localhost:3000","language":"bash"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>The other two environment specific files are the '<strong>.env.development</strong>' and '<strong>.env.production</strong>', and they are called when building or deploying using the commands:</p>"}},{"component":"CodeBlock","settings":{"id":"","class":"","style":"","code":"# Deploy to the local docker nginx instance\nyarn deploy.dev\n\n# Deploy to production (by default is configured for the github project instance)\nyarn deploy.prod","language":"bash"}}],"slug":"configuration","title_slug":"configuration","_mby":"5bc9193c303535004c0002f5","_by":"5bc9193c303535004c0002f5","_modified":1541019879,"_created":1540160654,"_id":"5bccfc8e613366009e0002ec","_link":"subpage"},{"title":"Build","components":[{"component":"heading","settings":{"id":"","class":"","style":"","text":"Build the application for live deploy","tag":"h1"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>The react static application can be build and deployed to any webserver (e.g. nginx), the current demo project provides an example nginx docker container that serves the static generated files.</p>\n<p>To build and deploy its only required the below steps:</p>"}},{"component":"CodeBlock","settings":{"id":"","class":"","style":"","code":"# Build and deploy\ncd <project>/react-app\nyarn deploy.dev\n\n# View the deployed app on nginx\ncd ../public\n./start.sh","language":"bash"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>The static website will be acessible on <strong>http://localhost:8081/</strong></p>"}}],"slug":"build","title_slug":"build","_mby":"5bc9193c303535004c0002f5","_by":"5bc9193c303535004c0002f5","_modified":1541019055,"_created":1540940779,"_id":"5bd8e3eb3331310049000341","_link":"subpage"},{"title":"Image Styles","components":[{"component":"heading","settings":{"id":"","class":"","style":"","text":"Image Styles","tag":"h1"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>Cockpit CMS provides the ability to transform any image/asset using the Image API (<a href=\"https://getcockpit.com/documentation/api/cockpit\" target=\"_blank\" rel=\"noopener\">https://getcockpit.com/documentation/api/cockpit</a>). However that doesn't provide the flexibility to configure the transformations directly in the CMS and can provide some overhead on the frontend implementation. To solve that the Image Styles addon is used (<a href=\"https://github.com/pauloamgomes/ImageStyles\" target=\"_blank\" rel=\"noopener\">https://github.com/pauloamgomes/ImageStyles</a>). The addon provides in the Cockpit admin interface a new section to create image styles and to apply automatically does styles into asset/image fields, so when fetching a collection the styled image url is part of the resulting payload:<br /><br /></p>"}},{"component":"CustomImage","settings":{"id":"","class":"","style":"Image","title":"Image Styles Payload","asset":{"path":"/2018/10/31/5bda1cdae6d5dImageStyles-request.png","title":"ImageStyles-request.png","mime":"image/png","description":"","tags":[],"size":108436,"image":true,"video":false,"audio":false,"archive":false,"document":false,"code":false,"created":1541020890,"modified":1541020890,"_by":"5bc9193c303535004c0002f5","width":1080,"height":535,"colors":["#2c2c24","#c9bd33","#978fc3","#71af2f","#625e7b"],"folder":"5bcce0f16133660092000133","_id":"5bda1cdb333131006100019f","cimgt":1541020898,"styles":[{"style":"Image","path":"//styles/subpage/5bccee7f613366008e000330/a3924a48af110fa4f2e10099db403344_1110x550_90_1541020891_fitToWidth_adb115059e28d960fa8badfac5516667.png?cimgt=1541020898"},{"style":"Square","path":"//styles/subpage/5bccee7f613366008e000330/a4dd904f91968e1f8f8afe5315cc947c_550x550_90_1541020891_thumbnail_adb115059e28d960fa8badfac5516667.png?cimgt=1541020898"}]}}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p><br />The following image styles are already configured:<br /><br /></p>"}},{"component":"CustomImage","settings":{"id":"","class":"","style":"Image","title":"Configured image styles","asset":{"path":"/2018/10/31/5bda245452235Example-ImageStylesConfiguration.png","title":"Example-ImageStylesConfiguration.png","mime":"image/png","description":"","tags":[],"size":40370,"image":true,"video":false,"audio":false,"archive":false,"document":false,"code":false,"created":1541022804,"modified":1541022804,"_by":"5bc9193c303535004c0002f5","width":1080,"height":592,"colors":["#e7e8e8","#626262","#55c4e4","#a5a5a5","#8c8c8c"],"folder":"5bcce0f16133660092000133","_id":"5bda2454333131008d000358","cimgt":1541022837,"styles":[{"style":"Image","path":"//styles/subpage/5bccee7f613366008e000330/1fb7b7e5da9ff3ddf86b5c9509f077de_1110x609_90_1541022804_fitToWidth_adb115059e28d960fa8badfac5516667.png?cimgt=1541022837"},{"style":"Square","path":"//styles/subpage/5bccee7f613366008e000330/dbbc81858d88f3cfa48941b556b677a4_550x550_90_1541022804_thumbnail_adb115059e28d960fa8badfac5516667.png?cimgt=1541022837"}]}}}],"slug":"image-styles","title_slug":"image-styles","_mby":"5bc9193c303535004c0002f5","_by":"5bc9193c303535004c0002f5","_modified":1541022837,"_created":1540157055,"_id":"5bccee7f613366008e000330","_link":"subpage"},{"title":"Blogs","components":[{"component":"heading","settings":{"id":"","class":"","style":"","text":"Blogs","tag":"h1"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>Blogs are supported using a custom Cockpit collection (Blog Post), the collection have a reference to the terms collection (used as taxonomy) and makes use of the same reusable components we have available for the Page and SubPage collections.<br /><br /></p>"}},{"component":"CustomImage","settings":{"id":"","class":"","style":"Image","title":"Blog Collection definition","asset":{"path":"/2018/10/21/5bccf5ab1e963BlogCollection.jpg","title":"BlogCollection.jpg","mime":"image/jpeg","description":"","tags":[],"size":95459,"image":true,"video":false,"audio":false,"archive":false,"document":false,"code":false,"created":1540158891,"modified":1540158891,"_by":"5bc9193c303535004c0002f5","width":1280,"height":706,"colors":["#fafafa","#3c6d77","#9aa6a4","#e23c29","#b89870"],"folder":"5bcce0f16133660092000133","_id":"5bccf5ab61336600960002c2","cimgt":1540853596,"styles":[{"style":"Image","path":"//styles/subpage/5bccf5b9613366009600021a/93f8a3fee1093d7fca08d0dc1b0bfe49_1110x613_90_1540228046_fitToWidth_adb115059e28d960fa8badfac5516667.jpg?cimgt=1540853596"},{"style":"Square","path":"//styles/subpage/5bccf5b9613366009600021a/78f9f9838dd0e6921e82c3f023094f47_550x550_90_1540228046_thumbnail_adb115059e28d960fa8badfac5516667.jpg?cimgt=1540853596"}]}}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p><br />To make them visible on the website its just required to have a Page with the Blog Posts component:<br /><br /></p>"}},{"component":"CustomImage","settings":{"id":"","class":"","style":"Image","title":"Blog Page","asset":{"path":"/2018/10/21/5bccf710ab90aBlogPage.jpg","title":"BlogPage.jpg","mime":"image/jpeg","description":"","tags":[],"size":73180,"image":true,"video":false,"audio":false,"archive":false,"document":false,"code":false,"created":1540159248,"modified":1540159248,"_by":"5bc9193c303535004c0002f5","width":1280,"height":727,"colors":["#cacbcb","#325253","#808c90","#646464","#6c6c6c"],"folder":"5bcce0f16133660092000133","_id":"5bccf710613366009a00032e","cimgt":1540853596,"styles":[{"style":"Image","path":"//styles/subpage/5bccf5b9613366009600021a/816d8456e16aceb0fe8db5082d544775_1110x631_90_1540228046_fitToWidth_adb115059e28d960fa8badfac5516667.jpg?cimgt=1540853596"},{"style":"Square","path":"//styles/subpage/5bccf5b9613366009600021a/c01c24ff68420c526a461a6afcc6a205_550x550_90_1540228046_thumbnail_adb115059e28d960fa8badfac5516667.jpg?cimgt=1540853596"}]}}}],"slug":"blogs","title_slug":"blogs","_mby":"5bc9193c303535004c0002f5","_by":"5bc9193c303535004c0002f5","_modified":1540853596,"_created":1540158905,"_id":"5bccf5b9613366009600021a","_link":"subpage"},{"title":"Live Preview","components":[{"component":"heading","settings":{"id":"","class":"","style":"","text":"Live Preview","tag":"h1"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>The Live Preview is a custom feature that makes usage of the ability of cockpit to specify a preview endpoint (for the frontend), on the React Static side of things, we have a Preview component, that handles a Post Message event (triggered by Cockpit to the preview iFrame) and re-renders the page with all the changes. The speed of changes is quite good giving the idea of a real time preview, something probably not available on any other CMS.<br /><br /></p>"}},{"component":"Video","settings":{"id":"","class":"","style":"","url":"https://youtu.be/4QlNDVSg-vE","autoplay":true}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>The implementation on React is simple, first we have a specific route for previewing:</p>"}},{"component":"CodeBlock","settings":{"id":"","class":"","style":"","code":"getRoutes: async () => {\n    // Other routes are processed.\n\n    // Handle preview route.\n    routes.push({\n      path: \"/preview\",\n      component: \"src/pages/Preview\",\n    });\n}","language":"javascript"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>And the Preview component can be resumed to the below code:</p>"}},{"component":"CodeBlock","settings":{"id":"","class":"","style":"","code":"import React, { Component } from \"react\";\n\nimport Metatags from \"../components/Metatags\";\nimport CockpitComponents from \"../components/CockpitComponents\";\n\nexport default class Preview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      components: [],\n    };\n  }\n\n  componentDidMount = () => {\n    window.addEventListener(\"message\", this.handlePreviewEntry);\n  };\n  componentWillUnmount = () => {\n    window.removeEventListener(\"message\", this.handlePreviewEntry);\n  };\n\n  handlePreviewEntry = event => {\n    this.setState({\n      title: event.data.entry.title,\n      description: event.data.entry.description,\n      components: event.data.entry.components,\n    });\n  };\n\n  render() {\n    const { title, description, components } = this.state;\n    return (\n      <article>\n        <Metatags title={title} pageDescription={description} />\n        <CockpitComponents components={components} />\n      </article>\n    );\n  }\n}\n","language":"javascript"}}],"slug":"live-preview","title_slug":"live-preview","_mby":"5bc9193c303535004c0002f5","_by":"5bc9193c303535004c0002f5","_modified":1540853593,"_created":1540159404,"_id":"5bccf7ac613366009e0002c3","_link":"subpage"},{"title":"Components","components":[{"component":"heading","settings":{"id":"","class":"","style":"","text":"Components","tag":"h1"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>The power of a headless system like Cockpit is that the CMS doesn't need to worry with the presentation aspects, being ideal for building component-based websites.</p>"}},{"component":"grid","settings":{"id":"","class":"","style":""},"columns":[{"settings":{"id":"","class":"","style":""},"children":[{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>In Cockpit, we just need to define each component as a simple aggregator of fields, for example, a Banner typically requires:</p>\n<ul>\n<li>title</li>\n<li>summary</li>\n<li>background image</li>\n</ul>\n<p>Using the Layout Field addon we just need to create our component structure.</p>"}}]},{"settings":{"id":"","class":"","style":""},"children":[{"component":"CustomImage","settings":{"id":"","class":"","style":"Image","title":null,"asset":{"path":"/2018/10/31/5bda1f501fbacComponentEdit-example.png","title":"ComponentEdit-example.png","mime":"image/png","description":"","tags":[],"size":8697,"image":true,"video":false,"audio":false,"archive":false,"document":false,"code":false,"created":1541021520,"modified":1541021520,"_by":"5bc9193c303535004c0002f5","width":540,"height":380,"colors":["#fafafa","#6b5a56","#5ec0e0","#b3b3b3","#9c9c9c"],"folder":"5bcce0f16133660092000133","_id":"5bda1f503331310069000395","cimgt":1541022467,"styles":[{"style":"Image","path":"//styles/subpage/5bda23033331310085000117/ec63cf11219ca2e628eb8f95a45d0481_1110x782_90_1541021520_fitToWidth_adb115059e28d960fa8badfac5516667.png?cimgt=1541022467"},{"style":"Square","path":"//styles/subpage/5bda23033331310085000117/c690ff73f6322e0c130aacd9f336ab39_550x550_90_1541021520_thumbnail_adb115059e28d960fa8badfac5516667.png?cimgt=1541022467"}]}}}]}]},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>The component will be automatically available on the pages that are using a <em>layout</em> field, and the user just needs to fill the required data:</p>"}},{"component":"CustomImage","settings":{"id":"","class":"","style":"Image","title":"Example of a banner component on edit mode","asset":{"path":"/2018/10/31/5bda20b643ad3ComponentInsertedExample.png","title":"ComponentInsertedExample.png","mime":"image/png","description":"","tags":[],"size":97997,"image":true,"video":false,"audio":false,"archive":false,"document":false,"code":false,"created":1541021878,"modified":1541021878,"_by":"5bc9193c303535004c0002f5","width":1080,"height":698,"colors":["#cccccc","#1c496a","#747e93","#7a6d6c","#7c5951"],"folder":"5bcce0f16133660092000133","_id":"5bda20b6333131008100026e","cimgt":1541022467,"styles":[{"style":"Image","path":"//styles/subpage/5bda23033331310085000117/a60a683a524b702e05d10f4b3ba6ba4a_1110x718_90_1541021878_fitToWidth_adb115059e28d960fa8badfac5516667.png?cimgt=1541022467"},{"style":"Square","path":"//styles/subpage/5bda23033331310085000117/b70f15c091104a272eb8ed9775dc4283_550x550_90_1541021878_thumbnail_adb115059e28d960fa8badfac5516667.png?cimgt=1541022467"}]}}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>Being an Headless system, we only need to fetch the content using the Cockpit REST API (or GraphQL) and the component values are present in a JSON structure:</p>"}},{"component":"CustomImage","settings":{"id":"","class":"","style":"Image","title":"Example of component in api response","asset":{"path":"/2018/10/31/5bda220928144ComponentRestStructure.png","title":"ComponentRestStructure.png","mime":"image/png","description":"","tags":[],"size":50287,"image":true,"video":false,"audio":false,"archive":false,"document":false,"code":false,"created":1541022217,"modified":1541022217,"_by":"5bc9193c303535004c0002f5","width":1080,"height":509,"colors":["#2c2c24","#cabe33","#8f83c7","#6daa2c","#605e72"],"folder":"5bcce0f16133660092000133","_id":"5bda220933313100810001c3","cimgt":1541022467,"styles":[{"style":"Image","path":"//styles/subpage/5bda23033331310085000117/7f3138225f98798749ede0913cd515ba_1110x524_90_1541022217_fitToWidth_adb115059e28d960fa8badfac5516667.png?cimgt=1541022467"},{"style":"Square","path":"//styles/subpage/5bda23033331310085000117/570880ed372bc6fb92209b916ba64ddb_550x550_90_1541022217_thumbnail_adb115059e28d960fa8badfac5516667.png?cimgt=1541022467"}]}}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>So, we have the component shaped with all information we need and we just need to map that data structure to a nice React component:</p>"}},{"component":"CodeBlock","settings":{"id":"","class":"","style":"","code":"import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport styled from \"styled-components\";\n//\nimport { getImageStyleUrl } from \"../../../cockpit/utils\";\n\nconst ContainerStyled = styled(Container)`\n  /* Custom Styles */\n`;\n\nconst Head = styled.div`\n  /* Custom Styles */\n`;\n\nconst InnerContainer = styled(Container)`\n  /* Custom Styles */\n`;\n\nexport default ({ name, title, summary, image, height }) => (\n  <ContainerStyled\n    className={`component--${name}`}\n    fluid\n    image={image}\n    height={height}\n  >\n    <Head>\n      <InnerContainer>\n        <h1>{title}</h1>\n        {summary && <p>{summary}</p>}\n      </InnerContainer>\n    </Head>\n  </ContainerStyled>\n);\n","language":"javascript"}}],"slug":"components","title_slug":"components","_mby":"5bc9193c303535004c0002f5","_by":"5bc9193c303535004c0002f5","_modified":1541022467,"_created":1541022467,"_id":"5bda23033331310085000117","_link":"subpage"}]}