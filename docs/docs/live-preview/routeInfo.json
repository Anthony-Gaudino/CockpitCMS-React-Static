{"path":"docs/live-preview","templateID":0,"sharedPropsHashes":{"page":"kSUxG","menuItems":"Uasye","posts":"ghDnT"},"localProps":{"subpage":{"title":"Live Preview","components":[{"component":"heading","settings":{"id":"","class":"","style":"","text":"Live Preview","tag":"h1"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>The Live Preview is a custom feature that makes usage of the ability of cockpit to specify a preview endpoint (for the frontend), on the React Static side of things, we have a Preview component, that handles a Post Message event (triggered by Cockpit to the preview iFrame) and re-renders the page with all the changes. The speed of changes is quite good giving the idea of a real time preview, something probably not available on any other CMS.<br /><br /></p>"}},{"component":"Video","settings":{"id":"","class":"","style":"","url":"https://youtu.be/4QlNDVSg-vE","autoplay":true}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>The implementation on React is simple, first we have a specific route for previewing:</p>"}},{"component":"CodeBlock","settings":{"id":"","class":"","style":"","code":"getRoutes: async () => {\n    // Other routes are processed.\n\n    // Handle preview route.\n    routes.push({\n      path: \"/preview\",\n      component: \"src/pages/Preview\",\n    });\n}","language":"javascript"}},{"component":"text","settings":{"id":"","class":"","style":"","text":"<p>And the Preview component can be resumed to the below code:</p>"}},{"component":"CodeBlock","settings":{"id":"","class":"","style":"","code":"import React, { Component } from \"react\";\n\nimport Metatags from \"../components/Metatags\";\nimport CockpitComponents from \"../components/CockpitComponents\";\n\nexport default class Preview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      components: [],\n    };\n  }\n\n  componentDidMount = () => {\n    window.addEventListener(\"message\", this.handlePreviewEntry);\n  };\n  componentWillUnmount = () => {\n    window.removeEventListener(\"message\", this.handlePreviewEntry);\n  };\n\n  handlePreviewEntry = event => {\n    this.setState({\n      title: event.data.entry.title,\n      description: event.data.entry.description,\n      components: event.data.entry.components,\n    });\n  };\n\n  render() {\n    const { title, description, components } = this.state;\n    return (\n      <article>\n        <Metatags title={title} pageDescription={description} />\n        <CockpitComponents components={components} />\n      </article>\n    );\n  }\n}\n","language":"javascript"}}],"slug":"live-preview","title_slug":"live-preview","_mby":"5bc9193c303535004c0002f5","_by":"5bc9193c303535004c0002f5","_modified":1540853593,"_created":1540159404,"_id":"5bccf7ac613366009e0002c3","_link":"subpage"}}}
